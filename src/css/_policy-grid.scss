$policy-height: 130px;
$policy-height-selected: $policy-height * 2 + $gs-baseline;

.policy-grid {
    overflow: hidden;
    @media (min-width: $breakpoint1) {
        margin-right: -$gs-baseline;
        &.has-selected {
            padding-bottom: ($policy-height-selected - $policy-height);
        }
    }
}

.policy-grid__item {
    position: relative;
    height: $policy-height;
    border: 2px solid $c-neutral7;
    box-sizing: border-box;
    float: left;
    margin-bottom: ($gs-gutter / 2);
    @include h-spacing(padding);
    font-size: 15px;
    color: $c-neutral2;

    width: 100%;

    @media (min-width: $breakpoint1) {
        margin: 0 $gs-baseline $gs-baseline 0;
    }

    // Misusing CSS as much as possible
    @mixin columns($cols, $start, $end: -1) {
        $q: '(min-width: #{$start})';
        @if $end != -1 { $q: '#{$q} and (max-width: #{$end - 1px})'; }
        @media #{$q} {
            $width: 100% / $cols;
            width: calc(#{$width} - #{$gs-baseline});

            &.is-selected {
                width: calc(#{$width * 2} - #{$gs-baseline});
                margin-left: -$width;
                left: $width;
            }

            &:nth-child(#{$cols}n) {
                margin-right: 0;
            }

            &:nth-child(#{$cols}n).is-selected {
                margin-left: auto;
                left: auto;
                margin-right: -$width;
                right: $width;
            }
        }
    }

    @include columns(2, $breakpoint1, $breakpoint2);
    @include columns(3, $breakpoint2, $breakpoint3);
    @include columns(4, $breakpoint3);

    &:hover {
        border-color: $c-neutral5;
    }

    transition: opacity 0.1s linear;
    .has-selected > & {
        opacity: 0.4;
    }

    p:last-child {
        margin-bottom: 0;
    }
}

.policy-grid__item__title {
    font-size: inherit;
    font-weight: normal;
}

.policy-grid__item__link {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    outline: 0;

    // This is a horrible hack 
    &:hover + .policy-grid__item__toggle-selected {
        opacity: 1;
        text-decoration: underline;
    }
}

.policy-grid__item__share {
    position: relative;
    z-index: 2;
    @media (min-width: $breakpoint0) {
        position: absolute;
        left: $gs-gutter / 2;
        top: 40px;
    }
    @media (min-width: $breakpoint1) {
        left: $gs-gutter;
        top: 50px;
    }
}

.policy-grid__item__source {
    position: relative;
    z-index: 2;

    &::after {
        content: "";
        display: inline-block;
        background: url('../imgs/external.svg') no-repeat center;
        background-size: contain;
        margin-left: 5px;
        width: 16px;
        height: 10px;
    }

    @media (min-width: $breakpoint0) {
        position: absolute;
        left: ($gs-gutter / 2);
        bottom: ($gs-gutter / 2);
    }
    @media (min-width: $breakpoint1) {
        left: $gs-gutter;
        bottom: $gs-gutter;
    }

}

.policy-grid__item__toggle-selected {
    @include fs-textSans(1);
    opacity: 0;
    text-transform: uppercase;
    color: map-get($pasteup-palette, guardian-brand);
    margin-top: (-$gs-baseline / 2);

    transition: opacity 0.1s ease-out;

    &::after {
        content: "Read more";
    }
}

.policy-grid__item__commentary {
    position: relative;
    padding-top: 5px;
    border-top: 1px dotted $c-neutral5;
    color: $c-neutral2;

    & > img {
        float: left;
        width: 50px;
        border-radius: 100px;
        margin-right: 10px;
        @media (min-width: $breakpoint0) {
            position: absolute;
            right: 100%;
        }
    }
}

.policy-grid__item__party {
    @include f-textSans;
    font-size: 13px;
    font-weight: bold;
    margin-bottom: ($gs-baseline / 2);

    &::before {
        content: "";
        display: inline-block;
        height: 14px;
        width: 6px;
        border-radius: 2px;
        vertical-align: middle;
        margin: -2px 5px 0 0;
    }
}

@mixin policy-grid__item__party--color($party, $color) {
    .policy-grid__item__party--#{$party}::before {
        background-color: $color;
    }
}

@include policy-grid__item__party--color(conservative, #0087dc);
@include policy-grid__item__party--color(labour, #d50000);
@include policy-grid__item__party--color(ukip, #70147A);
@include policy-grid__item__party--color(ld, #fdbb30);
@include policy-grid__item__party--color(pc, #3f8428);
@include policy-grid__item__party--color(snp, #fff95d);
@include policy-grid__item__party--color(green, #008066);

.policy-grid__item.is-selected {
    background-color: transparentize(white, 0.05);

    z-index: 2;
    min-height: $policy-height-selected;
    height: auto;
    box-shadow: none;
    border-color: $c-neutral3;
    color: inherit;

    .policy-grid__item__party {
        @include h-spacing(left);
        @media (min-width: $breakpoint0) {
            position: absolute;
        }
    }

    .policy-grid__item__title {
        font-weight: bold;
    }

    .policy-grid__item__toggle-selected {
        opacity: 1;
        &::after {
            content: "Close";
        }
    }

    @media (min-width: $breakpoint0) {
        padding-left: gs-span(2);
    }

    @media (min-width: $breakpoint1) {
        margin-bottom: ($policy-height - $policy-height-selected + $gs-baseline);
        height: $policy-height-selected;
    }

    .has-selected > & {
        opacity: 1;
    }
}
