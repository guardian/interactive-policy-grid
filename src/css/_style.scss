.container {
    @include container--width;
    background-color: white;
    counter-reset: question;
    padding: ($gs-gutter / 2);
    @media (min-width: $breakpoint2) {
        padding: $gs-gutter;
    }
}

body::after {
    position: fixed;
    bottom: 0;
    right: 0;
    content: "bp0";
    background-color: black;
    color: white;
    @media (min-width: $breakpoint1) {
        content: "bp1";
    }
    @media (min-width: $breakpoint2) {
        content: "bp2";
    }
    @media (min-width: $breakpoint3) {
        content: "bp3";
    }
}

.header {
    position: relative;
    overflow: hidden;
    border-bottom: 1px solid $c-neutral1;
    padding-bottom: ($gs-baseline * 2);
}

.header__date,
.header__text {
    color: $c-neutral2;
    max-width: gs-span(6);

    & > a {
        font-weight: bold;
    }
}

.header__date {
    @include fs-textSans(1);
    margin-top: -($gs-baseline / 2);
}

.header__advert {
    position: absolute;
    bottom: 0;
    right: 20px;
    height: 85px;
    @media (min-width: $breakpoint3) {
        height: 150px;
    }
    display: none;
    @media (min-width: $breakpoint1) {
        display: block;
    }
}

h2 {
    @include f-headline;
    font-size: 26px;
    @media (min-width: $breakpoint1) {
        font-size: 40px;
    }
}

.headline {
    padding-top: ($gs-baseline * 2);
    padding-bottom: $gs-baseline;

    @media (min-width: $breakpoint1) {
        padding-top: ($gs-baseline * 4);
    }
}

.back-to-top {
    display: none;
    .is-sticky & {
        display: inline-block;
    }

    font-size: 0;
    @media (min-width: $breakpoint1) {
        font-size: inherit;
    }
}

.question {
    position: relative;
    padding-left: 27px;
    max-width: gs-span(6);

    @media (min-width: $breakpoint1) {
        padding-left: 37px;
    }

    &::before {
        position: absolute;
        left: 0;
        counter-increment: question;
        content: counter(question) ".";
    }
}

.cta {
    display: block;
    margin: 0 auto;
    max-width: gs-span(11);
    padding: ($gs-baseline * 4) 0;
    color: inherit;

    &:hover {
        text-decoration: none;
    }

    @media (min-width: $breakpoint3) {
        max-width: gs-span(12);
    }

    &::after {
        content: " ";
        display: block;
        clear: both;
    }
}

.cta__title,
.cta__subtitle {
    @include f-header;
}

.cta__subtitle {
    margin-top: -$gs-baseline;
    color: $c-neutral3;
}

.cta__advert {
    display: none;
    @media (min-width: $breakpoint2) {
        display: block;
        float: left;
        margin-right: 30px;
        margin-top: -60px;
    }
}

.cta__link {
    color: map-get($pasteup-palette, guardian-brand);
    .cta:hover > & {
        text-decoration: underline;
    }
}
