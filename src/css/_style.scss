.container {
    @include container--size;
    background-color: white;
    counter-reset: question;
    padding: ($gs-gutter / 2);
    @media (min-width: $breakpoint2) {
        padding: $gs-gutter;
    }

    &.is-explore .basic-mode {
        display: none;
    }
    &.is-basic .explore-mode {
        display: none;
    }
}

.header {
    @include top-bar-size(margin-bottom);
    border-bottom: 1px solid $c-neutral3;
    padding-bottom: ($gs-baseline * 2);
}

.header__date,
.header__text {
    color: $c-neutral2;
    max-width: gs-span(6);

    & > a {
        font-weight: bold;
    }
}

.header__date {
    @include fs-textSans(1);
    margin-top: -($gs-baseline / 2);
}

h2 {
    @include f-headline;
    font-size: 26px;
    @media (min-width: $breakpoint1) {
        font-size: 40px;
    }
}

.headline {
    padding-top: ($gs-baseline * 2);
    padding-bottom: $gs-baseline;

    @media (min-width: $breakpoint1) {
        padding-top: ($gs-baseline * 4);
    }
}

// Stops questions from moving up when top bar becomes fixed
.top-bar-wrapper {
    @include top-bar-size(top, -1);
    position: relative;
    height: 0;
}

.top-bar {
    @include container--size;
    display: table;
    border-spacing: 0;
    width: 100%;
    border-bottom: 1px solid $c-neutral6;
    background-color: white;
    @include top-bar-size(line-height);

    &.is-sticky {
        position: fixed;
        z-index: 5;
        top: 0;
        left: 0;
        right: 0;
    }
}

.top-bar--left {
    display: table-cell;
    white-space: nowrap;
}

.top-bar--right {
    display: table-cell;
    text-align: right;
    width: 100%;
    vertical-align: middle;
}

.top-bar__block {
    @include f-headline;
    @include button--link;
    display: inline-block;
    border-right: 1px solid $c-neutral6;
    vertical-align: top;

    &:hover,
    &.is-current {
        background-color: lighten($c-newsmain2, 15%);
    }

    // Mega hacky way of having one more breakpoint for width (only here)
    @media (min-width: gs-span(5)) {
        width: 48px;
    }
    @include top-bar-size(width);
    width: 42px;

    @include top-bar-size(height);

    font-size: 26px;
    @media (min-width: $breakpoint1) {
        font-size: 40px;
    }
}

.top-bar__block--cart {
    background: url('../imgs/cart.svg') no-repeat center;
    border-left: 1px solid $c-neutral6;
    border-right: 0;
    margin-left: ($gs-gutter / 4);
    @media (min-width: $breakpoint1) {
        margin-left: ($gs-gutter / 2);
    }
}

.back-to-top {
    display: none;
    .is-sticky & {
        display: inline-block;
    }
}

.question {
    position: relative;
    padding-left: 27px;
    max-width: gs-span(6);

    @media (min-width: $breakpoint1) {
        padding-left: 37px;
    }

    &::before {
        position: absolute;
        left: 0;
        counter-increment: question;
        content: counter(question) ".";
    }
}

$font-size: 12px;

.filters {
    @include f-textSans;
    line-height: 2;
    margin-top: $gs-baseline;
    margin-bottom: ($gs-baseline * 2);
    text-align: center;
}

.filters--left {
    float: left;
    text-align: left;
}

.filters--right {
    float: right;
    text-align: right;
}

.filter {
    display: inline;
    font-size: ($font-size * 2);
    line-height: 1;
    text-transform: capitalize;
    border-bottom: 2px solid $c-neutral3;
    margin-right: ($gs-gutter * 2);

    &::before {
        content: "";
    }

    &:hover {
        border-bottom-color: $c-neutral1;
    }
}

.filter__title,
.filter__button {
    display: inline-block;
    vertical-align: middle;
    font-size: $font-size;
    line-height: 2;
    height: ($font-size * 2);
    margin-top: -1px;
}

.filter__title {
    padding: 0 10px;
    background-color: $c-neutral3;
    color: white;
    font-weight: bold;

    .filter:hover > & {
        background-color: $c-neutral1;
    }
}

.filter__button {
    color: $c-neutral3;
    padding: 0 8px;
    cursor: pointer;

    &:hover {
        text-decoration: none;
        background-color: $c-newsmain2;
        color: white !important;
    }

    &.is-selected {
        background-color: $c-neutral3;
        color: $c-neutral1;
    }

    & > input {
        display: none;
    }

    .filter:hover > & {
        color: $c-neutral1;
    }
}
